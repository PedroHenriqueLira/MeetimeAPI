

1.  **Pr√©-requisitos:**
    * Certifique-se de ter o **Git** instalado em sua m√°quina. Voc√™ precisar√° dele para clonar o reposit√≥rio.
    * Tenha o **Java Development Kit (JDK)** instalado. Recomenda-se uma vers√£o compat√≠vel com o seu projeto Spring Boot (geralmente a vers√£o 11 ou superior). Verifique sua vers√£o com `java -version` no terminal.
    * Tenha o **Maven** ou **Gradle** instalado, dependendo do gerenciador de depend√™ncias do projeto.

2.  **Clone o Reposit√≥rio do GitHub:**
    Abra seu terminal ou prompt de comando e navegue at√© o diret√≥rio onde voc√™ deseja salvar o projeto. Use o comando `git clone` seguido da URL do seu reposit√≥rio no GitHub.

    Exemplo:
    ```bash
    git clone [https://github.com/seu-usuario/seu-repositorio.git](https://github.com/seu-usuario/seu-repositorio.git)
    ```
    (Substitua `https://github.com/seu-usuario/seu-repositorio.git` pela URL real do seu reposit√≥rio).

3.  **Navegue at√© o Diret√≥rio do Projeto Clonado:**
    Ap√≥s a clonagem, utilize o comando `cd` para entrar na pasta do projeto que foi criada.

    Exemplo:
    ```bash
    cd seu-repositorio
    ```
    (Substitua `seu-repositorio` pelo nome da pasta do seu projeto).

4.  **Execute o Comando para Iniciar a Aplica√ß√£o:**

    * **Com Maven:**
        Execute o seguinte comando no terminal:
        ```bash
        ./mvnw spring-boot:run
        ```
        (Em alguns sistemas, pode ser necess√°rio usar `mvn spring-boot:run` sem o `./`). Este comando cuidar√° do download das depend√™ncias e da execu√ß√£o da aplica√ß√£o.

    * **Com Gradle:**
        Execute o seguinte comando:
        ```bash
        ./gradlew bootRun
        ```
        Assim como no Maven, o Gradle ir√° baixar as depend√™ncias e iniciar a aplica√ß√£o.

5.  **Aguarde a Inicializa√ß√£o:**
    O Spring Boot iniciar√° o servidor web embutido (geralmente Tomcat). Acompanhe os logs no seu terminal para verificar o progresso da inicializa√ß√£o e a porta em que a aplica√ß√£o estar√° dispon√≠vel (o padr√£o √© 8080).

6.  **Acesse a Aplica√ß√£o:**
    Abra seu navegador web e v√° para o endere√ßo padr√£o (se n√£o houver configura√ß√£o diferente):
    ```
    http://localhost:9090
    ```
    Agora voc√™ pode come√ßar a interagir com os endpoints da sua API, como descrito anteriormente neste README.

**Observa√ß√µes:**

* A primeira execu√ß√£o dos comandos de build (Maven ou Gradle) pode demorar um pouco mais, pois as depend√™ncias precisam ser baixadas. As execu√ß√µes seguintes ser√£o mais r√°pidas.
* Se voc√™ encontrar problemas, os logs no terminal geralmente fornecem informa√ß√µes valiosas para identificar a causa. Verifique se todas as depend√™ncias foram baixadas corretamente e se n√£o h√° conflitos de porta.
* Para desenvolvimento, manter o terminal com a aplica√ß√£o rodando aberto permite monitorar logs e eventuais erros em tempo real.

Com este guia completo, voc√™ estar√° pronto para clonar seu reposit√≥rio e iniciar sua aplica√ß√£o Spring Boot para integra√ß√£o com o HubSpot!

---

## OAuth üîê

### 1. **Conex√£o com HubSpot**
**M√©todo**: `GET`
**Endpoint**: `/connect-hubspot`
**Descri√ß√£o**: Redireciona o usu√°rio para a p√°gina de autoriza√ß√£o do HubSpot.

**Exemplo**:

GET http://localhost:9090/connect-hubspot

---

### 2. **Obter URL de Autoriza√ß√£o**
**M√©todo**: `GET`
**Endpoint**: `/oauth/authorization-url`
**Descri√ß√£o**: Retorna a URL de autoriza√ß√£o do HubSpot sem redirecionar.

**Exemplo**:

GET http://localhost:9090/oauth/authorization-url

---

### 3. **Callback de Autoriza√ß√£o**
**M√©todo**: `GET`
**Endpoint**: `/oauth/callback`
**Descri√ß√£o**: Endpoint que o HubSpot chama ap√≥s autoriza√ß√£o bem-sucedida.

**Exemplo**:

GET http://localhost:9090/oauth/callback?code=seu_codigo_aqui

---

## Contact üìá

### 1. **Criar Contato**
**M√©todo**: `POST`
**Endpoint**: `/create-contact`
**Descri√ß√£o**: Cria um novo contato no HubSpot.

**Exemplo de Requisi√ß√£o**:

POST http://localhost:9090/create-contact Content-Type: application/json Authorization: Bearer seu_token_aqui

{ "properties": { "firstname": "Nome", "lastname": "Sobrenome", "email": "email@exemplo.com", "phone": "(11) 99999-9999" } }

---

### 2. **Listar Contatos**
**M√©todo**: `GET`
**Endpoint**: `/get-contacts`
**Descri√ß√£o**: Obt√©m a lista de contatos do HubSpot.

**Exemplo de Requisi√ß√£o**:

GET http://localhost:9090/get-contacts Authorization: Bearer seu_token_aqui

---

## Webhook üì°

### 1. **Receber Webhook de Cria√ß√£o de Contato (lista)**
**M√©todo**: `POST`
**Endpoint**: `/webhook/contact-creation`
**Descri√ß√£o**: Recebe notifica√ß√µes do HubSpot quando um contato √© criado (formato lista).

**Exemplo de Requisi√ß√£o**:

POST http://localhost:9090/webhook/contact-creation Content-Type: application/json

[ { "appId": 10184300, "eventId": "100", "subscriptionId": "3396913", "portalId": "49617379", "occurredAt": 1743469383618, "subscriptionType": "contact.creation", "attemptNumber": 0, "objectId": "123", "changeSource": "CRM", "changeFlag": "NEW" } ]



---

### 2. **Receber Webhook de Cria√ß√£o de Contato (objeto √∫nico)**
**M√©todo**: `POST`
**Endpoint**: `/webhook/contact-creation-local`
**Descri√ß√£o**: Recebe notifica√ß√µes do HubSpot quando um contato √© criado (formato objeto √∫nico).

**Exemplo de Requisi√ß√£o**:

POST http://localhost:9090/webhook/contact-creation-local Content-Type: application/json

{ "appId": 10184300, "eventId": "100", "subscriptionId": "3396913", "portalId": "49617379", "occurredAt": 1743469383618, "subscriptionType": "contact.creation", "attemptNumber": 0, "objectId": "123", "changeSource": "CRM", "changeFlag": "NEW" }

---

## üöÄ **Testando e Integrando**

Ap√≥s configurar esses endpoints no seu **Postman**, voc√™ pode realizar testes integrados para:
1. **Autentica√ß√£o e autoriza√ß√£o do HubSpot**.
2. **Criar e listar contatos** na API do HubSpot.
3. **Receber webhooks** quando um contato for criado.

Certifique-se de usar o **Access Token** gerado durante o fluxo OAuth para acessar os endpoints de cria√ß√£o e listagem de contatos.